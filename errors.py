import traceback
import time

from docx import Document
from docx.shared import Inches
from datetime import datetime

import logs
import firewall_mars
import postgres_init
import configs


def create_file_error(error, error_basic):
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ –∏ —Å–æ–∑–¥–∞–µ—Ç —Ñ–∞–π–ª –¥–ª—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏
    param error:: –ü–æ–ª–Ω—ã–π –ª–æ–≥ –æ—à–∏–±–∫–∏
    param error_basic:: –ö—Ä–∞—Ç–∫–∏–π –ª–æ–≥ –æ—à–∏–±–∫–∏
    :return:
    """
    time_now = str(datetime.now())
    date_src = time_now[:19]

    document = Document()
    document.add_heading(f"–û—Ç—á–µ—Ç —Å–∏—Å—Ç–µ–º—ã –æ–± –æ—à–∏–±–∫–µ", 0)

    p = document.add_paragraph(f'–í—Ä–µ–º—è –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞: ')
    p.add_run(f'{date_src}').bold = True

    p = document.add_paragraph(f'–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏: ')
    p.add_run(f'{error_basic}').bold = True

    document.add_paragraph(f'–ü–æ–ª–Ω—ã–π –ª–æ–≥ –æ—à–∏–±–∫–∏: \n{error}')

    document.add_paragraph(
        '–° —É–≤–∞–∂–µ–Ω–∏–µ–º, —Å–∏—Å—Ç–µ–º–∞ –∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö\n'
        'RFC Informer Bot\n'
        'https://t.me/rfc_informer_bot'
    ).italic = True

    document.add_page_break()

    document.add_picture(r'error\tree_error.png', width=Inches(7))
    document.add_picture(r'error\read_error.png', width=Inches(7))

    # document.add_picture(r 'icon\icon.ico', width=Inches(1.25))

    document.save(configs.log_error_filename)


def error_bot(error_basic, us_id_for_error, protect_content_check, client):
    cursor, conn = postgres_init.postgres_init()
    alarm = False
    # current_datetime = datetime.now()
    logs.log_pass(us_id_for_error, '–û—à–∏–±–∫–∞', f'{error_basic}')
    # —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–µ—Ü —Å–∏–º–≤–æ–ª–æ–≤
    e1 = str(error_basic)
    e1 = e1.replace('<', '')
    e1 = e1.replace('>', '')
    try:
        with conn:
            with conn.cursor():
                cursor.execute(f'SELECT mode_test FROM mode_test WHERE user_id = "{us_id_for_error}"')
                mode_test_f_error = cursor.fetchone()[0]
    except (Exception,):
        mode_test_f_error = "no"
        pass

    if mode_test_f_error == "no":
        # –ø–æ–ª—É—á–∞–µ–º –æ—à–∏–±–∫—É
        error = traceback.format_exc()
        # –ø–µ—Ä–µ–¥–∞–µ–º –≤ —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª
        create_file_error(error, error_basic)

        for admin_user_id in firewall_mars.level_list_check('–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫'):
            # –ø—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∫–ª—é—á–µ–Ω–æ –ª–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫
            try:
                cursor.execute(f'SELECT error FROM error_table WHERE user_id = {admin_user_id}')
                error_vision = cursor.fetchone()[0]
            except (Exception,):
                error_vision = "yes"
                pass
            # –ø—Ä–µ—Ä—ã–≤–∞–µ–º —Ü–∏–∫–ª –µ—Å–ª–∏ –≤ –±–∞–∑–µ —Å—Ç–æ–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ—Ç
            if error_vision == 'yes':
                # –ü–´–¢–ê–ï–ú–°–Ø –û–¢–ü–†–ê–í–ò–¢–¨ –ö–û–î –ù–ê–¢–ò–í–ù–û
                code_error = traceback.format_exc()
                code_error = code_error.replace("<", "")
                code_error = code_error.replace(">", "")
                report = code_error
                if len(report) > 4000:
                    for x in range(0, len(report), 4000):
                        client.send_chat_action(admin_user_id, action="typing")
                        client.send_message(admin_user_id,
                                            f'<pre><code class="language-python">{report[x:x + 4000]}</code></pre>',
                                            parse_mode="html", protect_content=protect_content_check)
                else:
                    client.send_chat_action(admin_user_id, action="typing")
                    client.send_message(admin_user_id,
                                        f'<pre><code class="language-python">{report}</code></pre>',
                                        parse_mode="html", protect_content=protect_content_check)

                # except (Exception,):
                #     pass

                # —Ü–∏–∫–ª –ø–µ—Ä–µ–±–æ—Ä–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
                text1 = "<b>‚ö† –í–Ω–∏–º–∞–Ω–∏–µ! " + \
                        "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ —Å–∏—Å—Ç–µ–º—ã!</b>\n" + \
                        " \n" + \
                        "–õ–æ–≥ –æ—à–∏–±–∫–∏: <b>" + str(e1) + " </b>\n" + \
                        " \n"
                text2 = "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–æ–∏–∑–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ, " + \
                        "—Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —à—Ç–∞—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ"
                # try:
                text = str(text1) + str(text2)
                client.send_document(admin_user_id,
                                     open(configs.log_error_filename, "rb"),
                                     caption=text,
                                     parse_mode="html")
                alarm = True
                # except (Exception,):
                #     try:
                #         text = str(text1) + \
                #                "–ü–æ–ª–Ω—ã–π –ª–æ–≥ –æ—à–∏–±–∫–∏, —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –Ω–µ —É–¥–∞–ª–æ—Å—å\n \n" + \
                #                str(text2)
                #         client.send_message(admin_user_id, text, parse_mode="html",
                #                             protect_content=protect_content_check)
                #         alarm = True
                #     except (Exception,):
                #         pass
                time.sleep(1)
            else:
                pass
    else:
        alarm = False
        pass
        # os.remove("Full error log.doc")
        # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–æ—Å—å —Ö–æ—Ç—å –æ–¥–Ω–æ–º—É –∞–¥–º–∏–Ω—É, —É–∫–∞–∑—ã–≤–∞–µ–º —ç—Ç–æ –≤ –ª–æ–≥–∞—Ö
    if alarm is True:
        info_search = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —É–≤–µ–¥–æ–º–ª–µ–Ω—ã –æ–± –æ—à–∏–±–∫–µ"
    else:
        info_search = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –Ω–µ –±—ã–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω—ã –æ–± –æ—à–∏–±–∫–µ"

    logs.log_pass(us_id_for_error, '–î–µ–π—Å—Ç–≤–∏–µ', f'{info_search}')

    # –ø—ã—Ç–∞–µ–º—Å—è —É–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # print(us_id)
    # try:
    #    client.send_message(us_id,
    #                        "‚ö† –£–ø—Å! –í –º–æ–µ–π —Ä–∞–±–æ—Ç–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!\n"+\
    #                        " \n"+\
    #                        "üìù –õ–æ–≥ –æ—à–∏–±–∫–∏: <b>"+str(e1)+" </b>\n"+\
    #                        " \n"+\
    #                        "<b>–ü—Ä–æ—Å—å–±–∞ —É–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ "+\
    #                        "–∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ</b>",
    #                        parse_mode="html",
    #                        protect_content=protect_content_check)

    #    full_name = firewall_mars.id_in_name(us_id)
    #    info_search = {"–í—Ä–µ–º—è":str(current_datetime), \
    #    "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å":"I.R.A.","ID": 78787878,
    #    "–î–µ–π—Å—Ç–≤–∏–µ":"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "+full_name+" —É–≤–µ–¥–æ–º–ª–µ–Ω –æ–± –æ—à–∏–±–∫–µ"}
    #    print(info_search)
    #    log_pass(info_search, us_id)
    # except:
    #    info_search = {"–í—Ä–µ–º—è":str(current_datetime), \
    #    "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å":"I.R.A.","ID": 78787878,
    #    "–î–µ–π—Å—Ç–≤–∏–µ":"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É–≤–µ–¥–æ–º–ª–µ–Ω –æ–± –æ—à–∏–±–∫–µ"}
    #    print(info_search)
    #    log_pass(info_search, us_id)
    #    pass
