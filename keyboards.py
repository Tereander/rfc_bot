from telebot import types

import firewall_mars
import postgres_init
import configs


cursor, conn = postgres_init.postgres_init()


def menu_keyboard(us_id):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    # –ø–æ–º–µ–Ω—è–π –∫–Ω–æ–ø–∫–∏ –≤ –ö–û–õ–ë–ï–ö–ò –ò –í –û–ë–†–ê–ë–û–¢–ß–ò–ö–ï –°–û–ë–´–¢–ò–ô –í –ö–û–ù–¶–ï
    item1 = types.KeyboardButton("üîé –ü–æ–∏—Å–∫ RFC")
    item2 = types.KeyboardButton("üí¨ –ü–æ–º–æ—â—å")

    item3 = types.KeyboardButton("üìö –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
    item4 = types.KeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")

    item5 = types.KeyboardButton("üìÜ –ö–∞–ª–µ–Ω–¥–∞—Ä—å —Ä–∞–±–æ—Ç")
    item6 = types.KeyboardButton("üìÜ –°–ø–∏—Å–æ–∫ —Ä–∞–±–æ—Ç")

    markup.add(item1, item2)
    markup.add(item3, item4)
    try:
        guid_1c, check_l_name_button = firewall_mars.id_in_guid(us_id)
    except (Exception, ):
        check_l_name_button = False

    if check_l_name_button:
        markup.add(item5)
    else:
        markup.add(item5, item6)
    return markup


def main_setting_keyboard(us_id):
    """
    :param us_id: id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º
    :return: –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–≥–æ –º–µ–Ω—é —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π,
    –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
    """
    keyboard_settings = types.InlineKeyboardMarkup(row_width=2)  # –≤—ã–≤–æ–¥ –∫–Ω–æ–ø–æ–∫ –≤ 1 –∫–æ–ª–æ–Ω–∫—É
    # zero = types.InlineKeyboardButton('–°—Ç–∞—Ç—É—Å –º–æ–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫',
    # callback_data='–°—Ç–∞—Ç—É—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫')
    one = types.InlineKeyboardButton('üñ• –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ RFC',
                                     callback_data='–æ–ø–∏—Å–∞–Ω–∏–µ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ RFC')
    two = types.InlineKeyboardButton('üí° –°—Ç–∞—Ç—É—Å –ø–æ–¥—Å–∫–∞–∑–æ–∫',
                                     callback_data='–æ–ø–∏—Å–∞–Ω–∏–µ –°—Ç–∞—Ç—É—Å –ø–æ–¥—Å–∫–∞–∑–æ–∫')
    three = types.InlineKeyboardButton('‚úèÔ∏è –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞',
                                       callback_data='–¥–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞')
    four = types.InlineKeyboardButton('‚úâÔ∏è –†–∞—Å—Å—ã–ª–∫–∏',
                                      callback_data='–†–∞—Å—Å—ã–ª–∫–∏')
    five = types.InlineKeyboardButton('üìä –û—Ü–µ–Ω–∫–∞ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤',
                                      callback_data='–æ—Ü–µ–Ω–∫–∞ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤')
    six = types.InlineKeyboardButton('üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å',
                                     callback_data='–≤–∏–¥ –∫–∞–ª–µ–Ω–¥–∞—Ä—è')
    seven = types.InlineKeyboardButton('üôçüèº‚Äç‚ôÄÔ∏è –ú–æ–¥—É–ª—å –ª–∏—á–Ω–æ—Å—Ç–∏',
                                       callback_data='–º–æ–¥—É–ª—å –ª–∏—á–Ω–æ—Å—Ç–∏')
    eight = types.InlineKeyboardButton('üîÄ –î–µ–∂—É—Ä–Ω—ã–µ —Å–º–µ–Ω—ã',
                                       callback_data='–¥–µ–∂—É—Ä–Ω—ã–µ —Å–º–µ–Ω—ã')
    nine = types.InlineKeyboardButton('üö´ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫',
                                      callback_data='–æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫')
    try:
        access_level = firewall_mars.id_in_level(us_id)
    except (Exception, ):
        access_level = 5

    if access_level == 1:
        keyboard_settings.add(one, two, three, four, five, six, seven, eight, nine)
    else:
        keyboard_settings.add(one, two, three, four, five, six, seven, eight)
    # keyboard.add(zero)
    return keyboard_settings


def web_access_keyboard():
    """
    –ú–æ–¥—É–ª—å —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º –¥–ª—è
    –∏–∑–º–µ–Ω–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞/ –∏–º–µ–Ω–∏ –∏ –∏–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –î–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    :return: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ç–∏–ø–∞ reply
    """
    web_access = types.ReplyKeyboardMarkup(resize_keyboard=True)
    one = types.KeyboardButton('–ò–∑–º–µ–Ω–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞ üë®üèª‚Äçüíª',
                               web_app=types.WebAppInfo(url='https://tereander.github.io/rfc_bot/index.html')
                               )
    web_access.add(one)
    return web_access


def bank_zni_message_keyboard(uuid):
    keyboard_settings = types.InlineKeyboardMarkup(row_width=2)  # –≤—ã–≤–æ–¥ –∫–Ω–æ–ø–æ–∫ –≤ 1 –∫–æ–ª–æ–Ω–∫—É
    # zero = types.InlineKeyboardButton('–°—Ç–∞—Ç—É—Å –º–æ–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫',
    # callback_data='–°—Ç–∞—Ç—É—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫')
    item8 = types.InlineKeyboardButton(text='üñ• –°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ Naumen',
                                       callback_data=f'–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ Naumen {uuid}')
    item9 = types.InlineKeyboardButton(text='üñ® –í–ª–æ–∂–µ–Ω–∏—è Naumen',
                                       callback_data=f'–ü–ª–∞–Ω —Ä–∞–±–æ—Ç Naumen {uuid}')

    keyboard_settings.add(item8, item9)

    return keyboard_settings


def web_auth_1c_keyboard():
    """
    :return: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ç–∏–ø–∞ reply
    –ú–æ–¥—É–ª—å —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º –¥–ª—è
    –æ—Ç–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ —Å–∏—Å—Ç–µ–º–µ. –î–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    """
    web_auth_1c = types.ReplyKeyboardMarkup(resize_keyboard=True)
    one = types.KeyboardButton('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ —Å–∏—Å—Ç–µ–º–µ üì≤',
                               web_app=types.WebAppInfo(url='https://tereander.github.io/rfc_bot/auth.html')
                               )
    web_auth_1c.add(one)
    return web_auth_1c


def web_search_1c_keyboard():
    """
    :return: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ç–∏–ø–∞ reply
    –ú–æ–¥—É–ª—å —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º –¥–ª—è
    –ø–æ–∏—Å–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–æ ID. –î–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    """
    web_search_1c = types.ReplyKeyboardMarkup(resize_keyboard=True)
    one = types.KeyboardButton('–ü–æ–∏—Å–∫ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ üì≤',
                               web_app=types.WebAppInfo(url='https://tereander.github.io/rfc_bot/search.html')
                               )
    web_search_1c.add(one)
    return web_search_1c


def cerberus_keyboard():
    """
    :return: –ú–æ–¥—É–ª—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏
    –ú–æ–¥—É–ª—å –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –º–æ–¥—É–ª—å cerberus
    """
    keyboard_settings = types.InlineKeyboardMarkup(row_width=2)  # –≤—ã–≤–æ–¥ –∫–Ω–æ–ø–æ–∫ –≤ 1 –∫–æ–ª–æ–Ω–∫—É
    one = types.InlineKeyboardButton('üìò –°erberus ?',
                                     callback_data='–°erberus')
    two = types.InlineKeyboardButton('‚õîÔ∏è –≠—Ç–æ –æ—à–∏–±–∫–∞ !',
                                     callback_data='–°erberus error')
    keyboard_settings.add(one, two)
    # keyboard.add(zero)
    return keyboard_settings


def main_info_keyboard(us_id, clue_answer_list):
    """
    –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –º–æ–¥—É–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    :param us_id: id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º
    :param clue_answer_list: —Ç–µ–∫—Å—Ç–æ–≤–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, —Å –Ω–∞–±–æ—Ä–æ–º —à–∏—Ñ—Ä–∞–º –ø–æ–¥—Å–∫–∞–∑–æ–∫
    :return: –û–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏
    """
    keyboard = types.InlineKeyboardMarkup(row_width=2)  # –≤—ã–≤–æ–¥ –∫–Ω–æ–ø–æ–∫ –≤ 1 –∫–æ–ª–æ–Ω–∫—É
    one = types.InlineKeyboardButton('üìò –û–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º', callback_data='–û–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º')
    sp_rfc = types.InlineKeyboardButton('üìÇ –°—Ç–∞—Ç—É—Å—ã RFC', callback_data='–°—Ç–∞—Ç—É—Å—ã RFC —Å–ø–∏—Å–∫–æ–º')
    config_line_button = types.InlineKeyboardButton('üìé –ü–æ–ª—É—á–∏—Ç—å config –Ω–∞—Å—Ç—Ä–æ–µ–∫',
                                                    callback_data='config –∑–∞–ø—Ä–æ—Å')
    user_card = types.InlineKeyboardButton('üì∞ –ö–∞—Ä—Ç–æ—á–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
                                           callback_data='–ö–∞—Ä—Ç–æ—á–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    two = types.InlineKeyboardButton('üìò –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –±–æ—Ç',
                                     url="https://confluence.jet.su/pages/"
                                         "viewpage.action?pageId=162355250")
    three = types.InlineKeyboardButton('üìô –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è 1C',
                                       url="https://confluence.jet.su/pages/"
                                           "viewpage.action?pageId=157929193")
    four = types.InlineKeyboardButton('üìô –ò–° 1C',
                                      url=f"{configs.auth_1c['link']}/ru_RU/")
    five = types.InlineKeyboardButton('üìó –°–ø–∏—Å–æ–∫ SRFC',
                                      url="https://confluence.jet.su/display/"
                                          "pochtabank/SRFC")
    six = types.InlineKeyboardButton('üìÑ –®–∞–±–ª–æ–Ω—ã',
                                     callback_data='—à–∞–±–ª–æ–Ω—ã')
    seven = types.InlineKeyboardButton('üí° –°–ø—Ä–∞–≤–∫–∞',
                                       callback_data=str(clue_answer_list))

    # -----–∑–∞–∫–∞–Ω—á–∏–≤–∞–µ–º —Å –ø–æ–¥—Å–∫–∞–∑–∫–∞–º–∏

    try:
        access_level = firewall_mars.id_in_level(us_id)
    except (Exception, ):
        access_level = 5

    if access_level == 1 or access_level == 2:
        keyboard.add(sp_rfc, six)

    keyboard.add(one, two)
    keyboard.add(config_line_button, user_card)
    keyboard.add(three, four)
    keyboard.add(five)

    cursor.execute(f'SELECT advice FROM advice_rfc WHERE user_id = {us_id}')
    advice = cursor.fetchone()[0]
    if advice == "advice on":
        keyboard.add(seven)

    return keyboard
